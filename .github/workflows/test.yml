name: Test workflow                    # Workflow 이름
on:                                  # Event 감지
  push:
    branches:
      - develop                 
jobs:                                # Job 설정
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code.   # Repo checkout
        uses: actions/checkout@v3
      
      - name: Check Node v            # Node v 확인
        run: node -v
        
      - name: Install dependencies    # 의존 파일 설치
        run: yarn install --frozen-lockfile
      
      - name: Generate build          # React Build
        run: yarn build
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
    
  deploy:
        needs: build
        name: CD
        runs-on: self-hosted

        steps:
        - name: Get Github Actions IP
          id: ip
          uses: haythem/public-ip@v1.2

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-northeast-2

        - name: Add Github Actions IP to Security group
          run: |
            aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
  
        - name: SSH Commands
          uses: appleboy/ssh-action@v0.1.6
          with:
            host: ${{ secrets.AWS_SSH_HOST }}
            username: ${{ secrets.AWS_SSH_USERNAME }}
            key: ${{ secrets.AWS_SSH_KEY }}
            port: ${{ secrets.AWS_SSH_PORT }}
            script_stop: true
            script: |
              cd git/test-chatUniv
              yarn start
  
        - name: Remove Github Actions IP From Security Group
          run: |
            aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32








        
